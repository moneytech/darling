/*
 This file is part of Darling.

 Copyright (C) 2019 Lubos Dolezel

 Darling is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Darling is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Darling.  If not, see <http://www.gnu.org/licenses/>.
*/


#ifndef _libvMisc_H_
#define _libvMisc_H_

void* VVACOS(void);
void* VVACOSF(void);
void* VVACOSF_(void);
void* VVACOSH(void);
void* VVACOSHF(void);
void* VVACOSHF_(void);
void* VVACOSH_(void);
void* VVACOS_(void);
void* VVASIN(void);
void* VVASINF(void);
void* VVASINF_(void);
void* VVASINH(void);
void* VVASINHF(void);
void* VVASINHF_(void);
void* VVASINH_(void);
void* VVASIN_(void);
void* VVATAN(void);
void* VVATAN2(void);
void* VVATAN2F(void);
void* VVATAN2F_(void);
void* VVATAN2_(void);
void* VVATANF(void);
void* VVATANF_(void);
void* VVATANH(void);
void* VVATANHF(void);
void* VVATANHF_(void);
void* VVATANH_(void);
void* VVATAN_(void);
void* VVCBRT(void);
void* VVCBRTF(void);
void* VVCBRTF_(void);
void* VVCBRT_(void);
void* VVCEIL(void);
void* VVCEILF(void);
void* VVCEILF_(void);
void* VVCEIL_(void);
void* VVCOPYSIGN(void);
void* VVCOPYSIGNF(void);
void* VVCOPYSIGNF_(void);
void* VVCOPYSIGN_(void);
void* VVCOS(void);
void* VVCOSF(void);
void* VVCOSF_(void);
void* VVCOSH(void);
void* VVCOSHF(void);
void* VVCOSHF_(void);
void* VVCOSH_(void);
void* VVCOSISIN(void);
void* VVCOSISINF(void);
void* VVCOSISINF_(void);
void* VVCOSISIN_(void);
void* VVCOSPI(void);
void* VVCOSPIF(void);
void* VVCOSPIF_(void);
void* VVCOSPI_(void);
void* VVCOS_(void);
void* VVDIV(void);
void* VVDIVF(void);
void* VVDIVF_(void);
void* VVDIV_(void);
void* VVEXP(void);
void* VVEXP2(void);
void* VVEXP2F(void);
void* VVEXP2F_(void);
void* VVEXP2_(void);
void* VVEXPF(void);
void* VVEXPF_(void);
void* VVEXPM1(void);
void* VVEXPM1F(void);
void* VVEXPM1F_(void);
void* VVEXPM1_(void);
void* VVEXP_(void);
void* VVFABF(void);
void* VVFABF_(void);
void* VVFABS(void);
void* VVFABSF(void);
void* VVFABSF_(void);
void* VVFABS_(void);
void* VVFLOOR(void);
void* VVFLOORF(void);
void* VVFLOORF_(void);
void* VVFLOOR_(void);
void* VVFMOD(void);
void* VVFMODF(void);
void* VVFMODF_(void);
void* VVFMOD_(void);
void* VVINT(void);
void* VVINTF(void);
void* VVINTF_(void);
void* VVINT_(void);
void* VVLOG(void);
void* VVLOG10(void);
void* VVLOG10F(void);
void* VVLOG10F_(void);
void* VVLOG10_(void);
void* VVLOG1P(void);
void* VVLOG1PF(void);
void* VVLOG1PF_(void);
void* VVLOG1P_(void);
void* VVLOG2(void);
void* VVLOG2F(void);
void* VVLOG2F_(void);
void* VVLOG2_(void);
void* VVLOGB(void);
void* VVLOGBF(void);
void* VVLOGBF_(void);
void* VVLOGB_(void);
void* VVLOGF(void);
void* VVLOGF_(void);
void* VVLOG_(void);
void* VVNEXTAFTER(void);
void* VVNEXTAFTERF(void);
void* VVNEXTAFTERF_(void);
void* VVNEXTAFTER_(void);
void* VVNINT(void);
void* VVNINTF(void);
void* VVNINTF_(void);
void* VVNINT_(void);
void* VVPOW(void);
void* VVPOWF(void);
void* VVPOWF_(void);
void* VVPOWS(void);
void* VVPOWSF(void);
void* VVPOWSF_(void);
void* VVPOWS_(void);
void* VVPOW_(void);
void* VVREC(void);
void* VVRECF(void);
void* VVRECF_(void);
void* VVREC_(void);
void* VVREMAINDER(void);
void* VVREMAINDERF(void);
void* VVREMAINDERF_(void);
void* VVREMAINDER_(void);
void* VVRSQRT(void);
void* VVRSQRTF(void);
void* VVRSQRTF_(void);
void* VVRSQRT_(void);
void* VVSIN(void);
void* VVSINCOS(void);
void* VVSINCOSF(void);
void* VVSINCOSF_(void);
void* VVSINCOS_(void);
void* VVSINF(void);
void* VVSINF_(void);
void* VVSINH(void);
void* VVSINHF(void);
void* VVSINHF_(void);
void* VVSINH_(void);
void* VVSINPI(void);
void* VVSINPIF(void);
void* VVSINPIF_(void);
void* VVSINPI_(void);
void* VVSIN_(void);
void* VVSQRT(void);
void* VVSQRTF(void);
void* VVSQRTF_(void);
void* VVSQRT_(void);
void* VVTAN(void);
void* VVTANF(void);
void* VVTANF_(void);
void* VVTANH(void);
void* VVTANHF(void);
void* VVTANHF_(void);
void* VVTANH_(void);
void* VVTANPI(void);
void* VVTANPIF(void);
void* VVTANPIF_(void);
void* VVTANPI_(void);
void* VVTAN_(void);
void* __cblas_isamax(void);
void* __cblas_sasum(void);
void* __cblas_saxpy(void);
void* __cblas_sgemm(void);
void* __cblas_sgemv(void);
void* __cblas_srot(void);
void* __cblas_sscal(void);
void* __cblas_sswap(void);
void* dMultMatMat_16x16(void);
void* dMultMatMat_32x32(void);
void* dMultMatMat_4x4(void);
void* dMultMatMat_8x8(void);
void* dMultMatVec_16x16(void);
void* dMultMatVec_32x32(void);
void* dMultMatVec_4x4(void);
void* dMultMatVec_8x8(void);
void* dMultVecMat_16x16(void);
void* dMultVecMat_32x32(void);
void* dMultVecMat_4x4(void);
void* dMultVecMat_8x8(void);
void* sMultMatMat_16x16(void);
void* sMultMatMat_32x32(void);
void* sMultMatMat_4x4(void);
void* sMultMatMat_8x8(void);
void* sMultMatVec_16x16(void);
void* sMultMatVec_32x32(void);
void* sMultMatVec_4x4(void);
void* sMultMatVec_8x8(void);
void* sMultVecMat_16x16(void);
void* sMultVecMat_32x32(void);
void* sMultVecMat_4x4(void);
void* sMultVecMat_8x8(void);
void* vA1024Shift(void);
void* vA128Shift(void);
void* vA256Shift(void);
void* vA512Shift(void);
void* vA64Shift(void);
void* vA64Shift2(void);
void* vIsamax(void);
void* vIsamin(void);
void* vIsmax(void);
void* vIsmin(void);
void* vL1024Rotate(void);
void* vL128Rotate(void);
void* vL256Rotate(void);
void* vL512Rotate(void);
void* vL64Rotate(void);
void* vL64Rotate2(void);
void* vLL1024Shift(void);
void* vLL128Shift(void);
void* vLL256Shift(void);
void* vLL512Shift(void);
void* vLL64Shift(void);
void* vLL64Shift2(void);
void* vLR1024Shift(void);
void* vLR128Shift(void);
void* vLR256Shift(void);
void* vLR512Shift(void);
void* vLR64Shift(void);
void* vLR64Shift2(void);
void* vMultMatMat_16x16(void);
void* vMultMatMat_32x32(void);
void* vMultMatMat_4x4(void);
void* vMultMatMat_8x8(void);
void* vMultMatVec_16x16(void);
void* vMultMatVec_32x32(void);
void* vMultMatVec_4x4(void);
void* vMultMatVec_8x8(void);
void* vMultVecMat_16x16(void);
void* vMultVecMat_32x32(void);
void* vMultVecMat_4x4(void);
void* vMultVecMat_8x8(void);
void* vR1024Rotate(void);
void* vR128Rotate(void);
void* vR256Rotate(void);
void* vR512Rotate(void);
void* vR64Rotate(void);
void* vR64Rotate2(void);
void* vS1024Add(void);
void* vS1024AddS(void);
void* vS1024Divide(void);
void* vS1024HalfMultiply(void);
void* vS1024Mod(void);
void* vS1024Neg(void);
void* vS1024Sub(void);
void* vS1024SubS(void);
void* vS128Add(void);
void* vS128AddS(void);
void* vS128Divide(void);
void* vS128FullMultiply(void);
void* vS128HalfMultiply(void);
void* vS128Neg(void);
void* vS128Sub(void);
void* vS128SubS(void);
void* vS16Divide(void);
void* vS16HalfMultiply(void);
void* vS256Add(void);
void* vS256AddS(void);
void* vS256Divide(void);
void* vS256FullMultiply(void);
void* vS256HalfMultiply(void);
void* vS256Mod(void);
void* vS256Neg(void);
void* vS256Sub(void);
void* vS256SubS(void);
void* vS32Divide(void);
void* vS32FullMulEven(void);
void* vS32FullMulOdd(void);
void* vS32HalfMultiply(void);
void* vS512Add(void);
void* vS512AddS(void);
void* vS512Divide(void);
void* vS512FullMultiply(void);
void* vS512HalfMultiply(void);
void* vS512Mod(void);
void* vS512Neg(void);
void* vS512Sub(void);
void* vS512SubS(void);
void* vS64Add(void);
void* vS64AddS(void);
void* vS64Divide(void);
void* vS64FullMulEven(void);
void* vS64FullMulOdd(void);
void* vS64HalfMultiply(void);
void* vS64Neg(void);
void* vS64Sub(void);
void* vS64SubS(void);
void* vS8Divide(void);
void* vS8HalfMultiply(void);
void* vSasum(void);
void* vSaxpy(void);
void* vScopy(void);
void* vSdot(void);
void* vSgeadd(void);
void* vSgemm(void);
void* vSgemtx(void);
void* vSgemul(void);
void* vSgemv(void);
void* vSgemx(void);
void* vSgesub(void);
void* vSgetmi(void);
void* vSgetmo(void);
void* vSgevv(void);
void* vSnaxpy(void);
void* vSndot(void);
void* vSnorm2(void);
void* vSnrm2(void);
void* vSrot(void);
void* vSscal(void);
void* vSsum(void);
void* vSswap(void);
void* vSyax(void);
void* vSzaxpy(void);
void* vU1024Add(void);
void* vU1024AddS(void);
void* vU1024Divide(void);
void* vU1024HalfMultiply(void);
void* vU1024Mod(void);
void* vU1024Neg(void);
void* vU1024Sub(void);
void* vU1024SubS(void);
void* vU128Add(void);
void* vU128AddS(void);
void* vU128Divide(void);
void* vU128FullMultiply(void);
void* vU128HalfMultiply(void);
void* vU128Neg(void);
void* vU128Sub(void);
void* vU128SubS(void);
void* vU16Divide(void);
void* vU16HalfMultiply(void);
void* vU256Add(void);
void* vU256AddS(void);
void* vU256Divide(void);
void* vU256FullMultiply(void);
void* vU256HalfMultiply(void);
void* vU256Mod(void);
void* vU256Neg(void);
void* vU256Sub(void);
void* vU256SubS(void);
void* vU32Divide(void);
void* vU32FullMulEven(void);
void* vU32FullMulOdd(void);
void* vU32HalfMultiply(void);
void* vU512Add(void);
void* vU512AddS(void);
void* vU512Divide(void);
void* vU512FullMultiply(void);
void* vU512HalfMultiply(void);
void* vU512Mod(void);
void* vU512Neg(void);
void* vU512Sub(void);
void* vU512SubS(void);
void* vU64Add(void);
void* vU64AddS(void);
void* vU64Divide(void);
void* vU64FullMulEven(void);
void* vU64FullMulOdd(void);
void* vU64HalfMultiply(void);
void* vU64Neg(void);
void* vU64Sub(void);
void* vU64SubS(void);
void* vU8Divide(void);
void* vU8HalfMultiply(void);
void* vacosf(void);
void* vacoshf(void);
void* vasinf(void);
void* vasinhf(void);
void* vatan2f(void);
void* vatanf(void);
void* vatanhf(void);
void* vceilf(void);
void* vclassifyf(void);
void* vcopysignf(void);
void* vcosf(void);
void* vcoshf(void);
void* vcospif(void);
void* vdivf(void);
void* vec_sdot(void);
void* vexp2f(void);
void* vexpf(void);
void* vexpm1f(void);
void* vfabf(void);
void* vfabsf(void);
void* vfloorf(void);
void* vfmodf(void);
void* vintf(void);
void* vipowf(void);
void* vlog10f(void);
void* vlog1pf(void);
void* vlog2f(void);
void* vlogbf(void);
void* vlogf(void);
void* vnextafterf(void);
void* vnintf(void);
void* vpowf(void);
void* vrecf(void);
void* vremainderf(void);
void* vremquof(void);
void* vrsqrtf(void);
void* vscalbf(void);
void* vsignbitf(void);
void* vsincosf(void);
void* vsinf(void);
void* vsinhf(void);
void* vsinpif(void);
void* vsqrtf(void);
void* vtablelookup(void);
void* vtanf(void);
void* vtanhf(void);
void* vtanpif(void);
void* vtruncf(void);
void* vvacos(void);
void* vvacos_(void);
void* vvacosf(void);
void* vvacosf_(void);
void* vvacosh(void);
void* vvacosh_(void);
void* vvacoshf(void);
void* vvacoshf_(void);
void* vvasin(void);
void* vvasin_(void);
void* vvasinf(void);
void* vvasinf_(void);
void* vvasinh(void);
void* vvasinh_(void);
void* vvasinhf(void);
void* vvasinhf_(void);
void* vvatan(void);
void* vvatan2(void);
void* vvatan2_(void);
void* vvatan2f(void);
void* vvatan2f_(void);
void* vvatan_(void);
void* vvatanf(void);
void* vvatanf_(void);
void* vvatanh(void);
void* vvatanh_(void);
void* vvatanhf(void);
void* vvatanhf_(void);
void* vvcbrt(void);
void* vvcbrt_(void);
void* vvcbrtf(void);
void* vvcbrtf_(void);
void* vvceil(void);
void* vvceil_(void);
void* vvceilf(void);
void* vvceilf_(void);
void* vvcopysign(void);
void* vvcopysign_(void);
void* vvcopysignf(void);
void* vvcopysignf_(void);
void* vvcos(void);
void* vvcos_(void);
void* vvcosf(void);
void* vvcosf_(void);
void* vvcosh(void);
void* vvcosh_(void);
void* vvcoshf(void);
void* vvcoshf_(void);
void* vvcosisin(void);
void* vvcosisin_(void);
void* vvcosisinf(void);
void* vvcosisinf_(void);
void* vvcospi(void);
void* vvcospi_(void);
void* vvcospif(void);
void* vvcospif_(void);
void* vvdiv(void);
void* vvdiv_(void);
void* vvdivf(void);
void* vvdivf_(void);
void* vvexp(void);
void* vvexp2(void);
void* vvexp2_(void);
void* vvexp2f(void);
void* vvexp2f_(void);
void* vvexp_(void);
void* vvexpf(void);
void* vvexpf_(void);
void* vvexpm1(void);
void* vvexpm1_(void);
void* vvexpm1f(void);
void* vvexpm1f_(void);
void* vvfabf(void);
void* vvfabf_(void);
void* vvfabs(void);
void* vvfabs_(void);
void* vvfabsf(void);
void* vvfabsf_(void);
void* vvfloor(void);
void* vvfloor_(void);
void* vvfloorf(void);
void* vvfloorf_(void);
void* vvfmod(void);
void* vvfmod_(void);
void* vvfmodf(void);
void* vvfmodf_(void);
void* vvint(void);
void* vvint_(void);
void* vvintf(void);
void* vvintf_(void);
void* vvlog(void);
void* vvlog10(void);
void* vvlog10_(void);
void* vvlog10f(void);
void* vvlog10f_(void);
void* vvlog1p(void);
void* vvlog1p_(void);
void* vvlog1pf(void);
void* vvlog1pf_(void);
void* vvlog2(void);
void* vvlog2_(void);
void* vvlog2f(void);
void* vvlog2f_(void);
void* vvlog_(void);
void* vvlogb(void);
void* vvlogb_(void);
void* vvlogbf(void);
void* vvlogbf_(void);
void* vvlogf(void);
void* vvlogf_(void);
void* vvnextafter(void);
void* vvnextafter_(void);
void* vvnextafterf(void);
void* vvnextafterf_(void);
void* vvnint(void);
void* vvnint_(void);
void* vvnintf(void);
void* vvnintf_(void);
void* vvpow(void);
void* vvpow_(void);
void* vvpowf(void);
void* vvpowf_(void);
void* vvpows(void);
void* vvpows_(void);
void* vvpowsf(void);
void* vvpowsf_(void);
void* vvrec(void);
void* vvrec_(void);
void* vvrecf(void);
void* vvrecf_(void);
void* vvremainder(void);
void* vvremainder_(void);
void* vvremainderf(void);
void* vvremainderf_(void);
void* vvrsqrt(void);
void* vvrsqrt_(void);
void* vvrsqrtf(void);
void* vvrsqrtf_(void);
void* vvsin(void);
void* vvsin_(void);
void* vvsincos(void);
void* vvsincos_(void);
void* vvsincosf(void);
void* vvsincosf_(void);
void* vvsinf(void);
void* vvsinf_(void);
void* vvsinh(void);
void* vvsinh_(void);
void* vvsinhf(void);
void* vvsinhf_(void);
void* vvsinpi(void);
void* vvsinpi_(void);
void* vvsinpif(void);
void* vvsinpif_(void);
void* vvsqrt(void);
void* vvsqrt_(void);
void* vvsqrtf(void);
void* vvsqrtf_(void);
void* vvtan(void);
void* vvtan_(void);
void* vvtanf(void);
void* vvtanf_(void);
void* vvtanh(void);
void* vvtanh_(void);
void* vvtanhf(void);
void* vvtanhf_(void);
void* vvtanpi(void);
void* vvtanpi_(void);
void* vvtanpif(void);
void* vvtanpif_(void);

#endif
